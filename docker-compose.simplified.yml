version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ai-dialer-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ai_dialer}
      POSTGRES_USER: ${POSTGRES_USER:-ai_dialer_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change_me_in_production}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ai_dialer_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ai-dialer-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Piper TTS + Vosk STT (Human-like voice + Speech recognition)
  speech-services:
    build:
      context: .
      dockerfile: Dockerfile.piper
    container_name: ai-dialer-speech
    volumes:
      - ./models:/models
      - ./audio-cache:/audio-cache
    environment:
      - PIPER_PATH=/usr/local/bin/piper
      - PIPER_MODEL_PATH=/models/piper
      - VOSK_MODEL_PATH=/models/vosk/vosk-model-small-en-us-0.15
    healthcheck:
      test: ["CMD", "piper", "--version"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Backend (Simplified)
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: ai-dialer-backend
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: postgresql://${POSTGRES_USER:-ai_dialer_user}:${POSTGRES_PASSWORD:-change_me_in_production}@postgres:5432/${POSTGRES_DB:-ai_dialer}
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_here}
      
      # Telnyx (SIP only, ~$0.004/min)
      TELNYX_API_KEY: ${TELNYX_API_KEY}
      TELNYX_SIP_USERNAME: ${TELNYX_SIP_USERNAME}
      TELNYX_SIP_PASSWORD: ${TELNYX_SIP_PASSWORD}
      TELNYX_PHONE_NUMBER: ${TELNYX_PHONE_NUMBER}
      
      # Piper TTS (human-like voice, FREE)
      TTS_ENGINE: piper
      PIPER_PATH: /usr/local/bin/piper
      PIPER_MODEL_PATH: /models/piper
      
      # Vosk STT (speech recognition, FREE)
      STT_ENGINE: vosk
      VOSK_MODEL_PATH: /models/vosk/vosk-model-small-en-us-0.15
      
    volumes:
      - ./server:/app
      - ./models:/models
      - ./audio:/audio
      - ./audio-cache:/audio-cache
      - ./logs:/app/logs
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
      - speech-services
    command: npm start

  # Asterisk (SIP/VoIP)
  asterisk:
    build:
      context: .
      dockerfile: Dockerfile.asterisk
    container_name: ai-dialer-asterisk
    network_mode: host
    volumes:
      - ./asterisk-config:/etc/asterisk
      - ./asterisk-logs:/var/log/asterisk
      - ./server/asterisk:/var/lib/asterisk/agi-bin
    environment:
      - AI_DIALER_URL=http://localhost:3000/api/v1
    depends_on:
      - backend

  # Frontend
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: ai-dialer-frontend
    ports:
      - "3001:80"
    environment:
      - REACT_APP_API_URL=${API_URL:-http://localhost:3000}
    depends_on:
      - backend

volumes:
  postgres_data:
  models:
  audio-cache:

networks:
  default:
    name: ai-dialer-network

